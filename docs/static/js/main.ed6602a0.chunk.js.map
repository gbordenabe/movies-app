{"version":3,"sources":["components/AddCategory.js","helper/getMovies.js","hooks/useFetchMovies.js","components/DialogMovie.js","components/CardMovie.js","components/GridMovies.js","static/background.jpg","components/MoviesApp.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","input","color","fontSize","width","AddCategory","setCategories","useState","inputValue","setInputValue","classes","onSubmit","e","preventDefault","trim","length","cats","className","type","value","onChange","target","placeholder","getMovies","category","a","url","fetch","resp","json","results","movies","map","id","title","poster_path","overview","vote_average","release_date","rating","console","log","useFetchMovies","data","loading","state","setState","useEffect","then","img","Transition","React","props","ref","Slide","direction","DialogMovie","open","close","Dialog","TransitionComponent","keepMounted","onClose","DialogTitle","Typography","variant","DialogContent","DialogContentText","style","textAlign","card","height","border","margin","CardMovie","openDialogMovie","setDialogMovie","Card","Button","onClick","CardMedia","component","src","alt","CardContent","gutterBottom","grid","display","flexDirection","flexWrap","justifyContent","breakpoints","down","alingItems","align","justify","alignItems","GridMovies","images","root","padding","backgroundImage","background","marginBottom","MoviesApp","categories","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed6602a0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  input: {\r\n    color: \"grey\",\r\n    fontSize: \"1.2rem\",\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const hadleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((cats) => [inputValue]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={hadleSubmit}>\r\n      <input\r\n        className={classes.input}\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n        placeholder=\"\r\n        Enter a movie or genre\"\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCategory;\r\n","const getMovies = async (category) => {\r\n  const url = `https://api.themoviedb.org/3/search/movie?api_key=6e993083b050fd8d52fd449621017db7&language=en-US&query=${category}&page=1&include_adult=false`;\r\n  const resp = await fetch(url);\r\n  const { results } = await resp.json();\r\n\r\n  const movies = results.map(\r\n    ({ id, title, poster_path, overview, vote_average, release_date }) => {\r\n      return {\r\n        id: id,\r\n        title: title,\r\n        url: `https://image.tmdb.org/t/p/original${poster_path}`,\r\n        overview: overview,\r\n        rating: vote_average,\r\n        release_date: release_date,\r\n      };\r\n    }\r\n  );\r\n  console.log(movies);\r\n  return movies;\r\n};\r\n\r\nexport default getMovies;\r\n","import { useState, useEffect } from \"react\";\r\nimport getMovies from \"../helper/getMovies\";\r\n\r\nconst useFetchMovies = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getMovies(category).then((img) => {\r\n      setState({\r\n        data: img,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n\r\nexport default useFetchMovies;\r\n","import * as React from \"react\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport DialogContentText from \"@mui/material/DialogContentText\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport Slide from \"@mui/material/Slide\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function DialogMovie({\r\n  open,\r\n  close,\r\n  title,\r\n  overview,\r\n  rating,\r\n  release_date,\r\n}) {\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={close}\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle>\r\n          <Typography variant=\"h4\">{title}</Typography>\r\n\r\n          <Typography variant=\"h6\">Relase date: {release_date}</Typography>\r\n        </DialogTitle>\r\n\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            {overview}\r\n          </DialogContentText>\r\n          <br />\r\n          <Typography variant=\"h6\" style={{ textAlign: \"right\" }}>\r\n            Rating: {rating}/10\r\n          </Typography>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Button } from \"@mui/material\";\r\nimport DialogMovie from \"./DialogMovie\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    width: 300,\r\n    height: \"100%\",\r\n    border: \"solid\",\r\n    margin: \"10px\",\r\n  },\r\n}));\r\n\r\nexport default function CardMovie({\r\n  id,\r\n  title,\r\n  url,\r\n  overview,\r\n  rating,\r\n  release_date,\r\n}) {\r\n  const classes = useStyles();\r\n  const [openDialogMovie, setDialogMovie] = useState(false);\r\n\r\n  const handleOpenDialogMovie = () => {\r\n    setDialogMovie(true);\r\n  };\r\n\r\n  const handleCloseDialogMovie = () => {\r\n    setDialogMovie(false);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <Button onClick={handleOpenDialogMovie}>\r\n        <CardMedia component=\"img\" height=\"140\" src={url} alt={title} />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h6\" component=\"div\">\r\n            {title}\r\n          </Typography>\r\n        </CardContent>\r\n      </Button>\r\n      <DialogMovie\r\n        open={openDialogMovie}\r\n        close={handleCloseDialogMovie}\r\n        title={title}\r\n        overview={overview}\r\n        rating={rating}\r\n        release_date={release_date}\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport useFetchMovies from \"../hooks/useFetchMovies\";\r\nimport CardMovie from \"./CardMovie\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  grid: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"center\",\r\n  },\r\n  card: {\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      justifyContent: \"flex-end\",\r\n      alingItems: \"center\",\r\n      align: \"center\",\r\n      justify: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst GridMovies = ({ category }) => {\r\n  const { data: images, loading } = useFetchMovies(category);\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n      <div className={classes.grid}>\r\n        {images.map((img) => {\r\n          return <CardMovie className={classes.card} key={img.id} {...img} />;\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GridMovies;\r\n","export default __webpack_public_path__ + \"static/media/background.e786d151.jpg\";","import { makeStyles, Typography } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport AddCategory from \"./AddCategory\";\r\nimport GridMovies from \"./GridMovies\";\r\nimport background from \"../static/background.jpg\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: \"50px\",\r\n    backgroundImage: `url(${background})`,\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      padding: \"10px\",\r\n    },\r\n  },\r\n  title: { textAlign: \"center\", marginBottom: \"20px\", color: \"white\" },\r\n}));\r\n\r\nconst MoviesApp = () => {\r\n  const [categories, setCategories] = useState([\"Avengers\"]);\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography variant=\"h3\" className={classes.title}>\r\n        Movies App\r\n      </Typography>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n\r\n      <ol>\r\n        {categories.map((category) => (\r\n          <GridMovies\r\n            className={classes.grid}\r\n            key={category}\r\n            category={category}\r\n          />\r\n        ))}\r\n      </ol>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoviesApp;\r\n","import MoviesApp from \"./components/MoviesApp\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MoviesApp />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}